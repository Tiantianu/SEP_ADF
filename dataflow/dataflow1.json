{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "wwiorders",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "wwiorderlines",
						"type": "DatasetReference"
					},
					"name": "source2"
				},
				{
					"dataset": {
						"referenceName": "wwicustomer",
						"type": "DatasetReference"
					},
					"name": "source3"
				},
				{
					"dataset": {
						"referenceName": "wwiinovoices",
						"type": "DatasetReference"
					},
					"name": "source4"
				},
				{
					"dataset": {
						"referenceName": "wwipackagetype",
						"type": "DatasetReference"
					},
					"name": "source5"
				},
				{
					"dataset": {
						"referenceName": "wwistockitems",
						"type": "DatasetReference"
					},
					"name": "source6"
				},
				{
					"dataset": {
						"referenceName": "wwipeople",
						"type": "DatasetReference"
					},
					"name": "source7"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "join1"
				},
				{
					"name": "join2"
				},
				{
					"name": "join3"
				},
				{
					"name": "join4"
				},
				{
					"name": "join5"
				},
				{
					"name": "join6"
				}
			],
			"scriptLines": [
				"source(output(",
				"          OrderID as integer,",
				"          CustomerID as integer,",
				"          SalespersonPersonID as integer,",
				"          PickedByPersonID as integer,",
				"          ContactPersonID as integer,",
				"          BackorderOrderID as integer,",
				"          OrderDate as date,",
				"          ExpectedDeliveryDate as date,",
				"          CustomerPurchaseOrderNumber as string,",
				"          IsUndersupplyBackordered as boolean,",
				"          Comments as string,",
				"          DeliveryInstructions as string,",
				"          InternalComments as string,",
				"          PickingCompletedWhen as timestamp,",
				"          LastEditedBy as integer,",
				"          LastEditedWhen as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source1",
				"source(output(",
				"          OrderLineID as integer,",
				"          OrderID as integer,",
				"          StockItemID as integer,",
				"          Description as string,",
				"          PackageTypeID as integer,",
				"          Quantity as integer,",
				"          UnitPrice as decimal(18,2),",
				"          TaxRate as decimal(18,3),",
				"          PickedQuantity as integer,",
				"          PickingCompletedWhen as timestamp,",
				"          LastEditedBy as integer,",
				"          LastEditedWhen as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source2",
				"source(output(",
				"          CustomerID as integer,",
				"          CustomerName as string,",
				"          BillToCustomerID as integer,",
				"          CustomerCategoryID as integer,",
				"          BuyingGroupID as integer,",
				"          PrimaryContactPersonID as integer,",
				"          AlternateContactPersonID as integer,",
				"          DeliveryMethodID as integer,",
				"          DeliveryCityID as integer,",
				"          PostalCityID as integer,",
				"          CreditLimit as decimal(18,2),",
				"          AccountOpenedDate as date,",
				"          StandardDiscountPercentage as decimal(18,3),",
				"          IsStatementSent as boolean,",
				"          IsOnCreditHold as boolean,",
				"          PaymentDays as integer,",
				"          PhoneNumber as string,",
				"          FaxNumber as string,",
				"          DeliveryRun as string,",
				"          RunPosition as string,",
				"          WebsiteURL as string,",
				"          DeliveryAddressLine1 as string,",
				"          DeliveryAddressLine2 as string,",
				"          DeliveryPostalCode as string,",
				"          DeliveryLocation as binary,",
				"          PostalAddressLine1 as string,",
				"          PostalAddressLine2 as string,",
				"          PostalPostalCode as string,",
				"          LastEditedBy as integer,",
				"          ValidFrom as timestamp,",
				"          ValidTo as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source3",
				"source(output(",
				"          InvoiceID as integer,",
				"          CustomerID as integer,",
				"          BillToCustomerID as integer,",
				"          OrderID as integer,",
				"          DeliveryMethodID as integer,",
				"          ContactPersonID as integer,",
				"          AccountsPersonID as integer,",
				"          SalespersonPersonID as integer,",
				"          PackedByPersonID as integer,",
				"          InvoiceDate as date,",
				"          CustomerPurchaseOrderNumber as string,",
				"          IsCreditNote as boolean,",
				"          CreditNoteReason as string,",
				"          Comments as string,",
				"          DeliveryInstructions as string,",
				"          InternalComments as string,",
				"          TotalDryItems as integer,",
				"          TotalChillerItems as integer,",
				"          DeliveryRun as string,",
				"          RunPosition as string,",
				"          ReturnedDeliveryData as string,",
				"          ConfirmedDeliveryTime as timestamp,",
				"          ConfirmedReceivedBy as string,",
				"          LastEditedBy as integer,",
				"          LastEditedWhen as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source4",
				"source(output(",
				"          PackageTypeID as integer,",
				"          PackageTypeName as string,",
				"          LastEditedBy as integer,",
				"          ValidFrom as timestamp,",
				"          ValidTo as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source5",
				"source(output(",
				"          StockItemID as integer,",
				"          StockItemName as string,",
				"          SupplierID as integer,",
				"          ColorID as integer,",
				"          UnitPackageID as integer,",
				"          OuterPackageID as integer,",
				"          Brand as string,",
				"          Size as string,",
				"          LeadTimeDays as integer,",
				"          QuantityPerOuter as integer,",
				"          IsChillerStock as boolean,",
				"          Barcode as string,",
				"          TaxRate as decimal(18,3),",
				"          UnitPrice as decimal(18,2),",
				"          RecommendedRetailPrice as decimal(18,2),",
				"          TypicalWeightPerUnit as decimal(18,3),",
				"          MarketingComments as string,",
				"          InternalComments as string,",
				"          Photo as binary,",
				"          CustomFields as string,",
				"          Tags as string,",
				"          SearchDetails as string,",
				"          LastEditedBy as integer,",
				"          ValidFrom as timestamp,",
				"          ValidTo as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source6",
				"source(output(",
				"          PersonID as integer,",
				"          FullName as string,",
				"          PreferredName as string,",
				"          SearchName as string,",
				"          IsPermittedToLogon as boolean,",
				"          LogonName as string,",
				"          IsExternalLogonProvider as boolean,",
				"          HashedPassword as binary,",
				"          IsSystemUser as boolean,",
				"          IsEmployee as boolean,",
				"          IsSalesperson as boolean,",
				"          UserPreferences as string,",
				"          PhoneNumber as string,",
				"          FaxNumber as string,",
				"          EmailAddress as string,",
				"          Photo as binary,",
				"          CustomFields as string,",
				"          OtherLanguages as string,",
				"          LastEditedBy as integer,",
				"          ValidFrom as timestamp,",
				"          ValidTo as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source7",
				"source1, source2 join(source1@OrderID == source2@OrderID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1, source3 join(source1@CustomerID == source3@CustomerID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join2",
				"join2, source4 join(source1@OrderID == source4@OrderID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join3",
				"join3, source5 join(source2@PackageTypeID == source5@PackageTypeID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join4",
				"join4, source6 join(source2@StockItemID == source6@StockItemID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join5",
				"join5, source7 join(source1@CustomerID == PersonID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join6"
			]
		}
	}
}