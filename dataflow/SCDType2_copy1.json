{
	"name": "SCDType2_copy1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Dim_customer",
						"type": "DatasetReference"
					},
					"name": "WWICustomer"
				},
				{
					"dataset": {
						"referenceName": "Dim_customer",
						"type": "DatasetReference"
					},
					"name": "CustomerTable"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Dim_customer",
						"type": "DatasetReference"
					},
					"name": "SinkOrders"
				},
				{
					"dataset": {
						"referenceName": "Dim_customer",
						"type": "DatasetReference"
					},
					"name": "sinkUpdate"
				}
			],
			"transformations": [
				{
					"name": "NotNull"
				},
				{
					"name": "AddingIsActive"
				},
				{
					"name": "lookup1"
				},
				{
					"name": "IDnotNull"
				},
				{
					"name": "select2"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "alterRow1"
				},
				{
					"name": "select3"
				}
			],
			"scriptLines": [
				"source(output(",
				"          {Customer Key} as integer,",
				"          {WWI Customer ID} as integer,",
				"          Customer as string,",
				"          Category as string,",
				"          {Buying Group} as string,",
				"          {Primary Contact} as string,",
				"          {Postal Code} as string,",
				"          {Valid From} as timestamp,",
				"          {Valid To} as timestamp,",
				"          {Lineage Key} as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> WWICustomer",
				"source(output(",
				"          {Customer Key} as integer,",
				"          {WWI Customer ID} as integer,",
				"          Customer as string,",
				"          {Bill To Customer} as string,",
				"          Category as string,",
				"          {Buying Group} as string,",
				"          {Primary Contact} as string,",
				"          {Postal Code} as string,",
				"          {Valid From} as timestamp,",
				"          {Valid To} as timestamp,",
				"          {Lineage Key} as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> CustomerTable",
				"WWICustomer filter(!isNull(CustomerID)) ~> NotNull",
				"NotNull derive({Lineage Key} = 2) ~> AddingIsActive",
				"WWICustomer, CustomerTable lookup(CustomerID == CustomerTable@{WWI Customer ID},",
				"     multiple: true,",
				"     broadcast: 'auto')~> lookup1",
				"lookup1 filter(!isNull({CustomerID})) ~> IDnotNull",
				"IDnotNull select(mapColumn(",
				"          CustomerID,",
				"          CustomerName,",
				"          BillToCustomerID,",
				"          CustomerCategoryID,",
				"          BuyingGroupID,",
				"          PrimaryContactPersonID,",
				"          AlternateContactPersonID,",
				"          DeliveryMethodID,",
				"          DeliveryCityID,",
				"          PostalCityID,",
				"          CreditLimit,",
				"          AccountOpenedDate,",
				"          StandardDiscountPercentage,",
				"          IsStatementSent,",
				"          IsOnCreditHold,",
				"          PaymentDays,",
				"          PhoneNumber,",
				"          FaxNumber,",
				"          DeliveryRun,",
				"          RunPosition,",
				"          WebsiteURL,",
				"          DeliveryAddressLine1,",
				"          DeliveryAddressLine2,",
				"          DeliveryPostalCode,",
				"          DeliveryLocation,",
				"          PostalAddressLine1,",
				"          PostalAddressLine2,",
				"          PostalPostalCode,",
				"          LastEditedBy,",
				"          ValidFrom,",
				"          ValidTo,",
				"          {Customer Key} = CustomerTable@{Customer Key},",
				"          {WWI Customer ID} = CustomerTable@{WWI Customer ID},",
				"          Customer = CustomerTable@Customer,",
				"          {Bill To Customer},",
				"          Category = CustomerTable@Category,",
				"          {Buying Group} = CustomerTable@{Buying Group},",
				"          {Primary Contact} = CustomerTable@{Primary Contact},",
				"          {Postal Code} = CustomerTable@{Postal Code},",
				"          {Valid From} = CustomerTable@{Valid From},",
				"          {Valid To} = CustomerTable@{Valid To},",
				"          {Lineage Key} = CustomerTable@{Lineage Key}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"select2 derive({Lineage Key} = 0) ~> derivedColumn1",
				"derivedColumn1 alterRow(insertIf(2==2)) ~> alterRow1",
				"CustomerTable select(mapColumn(",
				"          {Customer Key},",
				"          {WWI Customer ID},",
				"          Customer,",
				"          {Valid From},",
				"          {Valid To},",
				"          {Lineage Key}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select3",
				"AddingIsActive sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          {Customer Key} as integer,",
				"          {WWI Customer ID} as integer,",
				"          Customer as string,",
				"          Category as string,",
				"          {Buying Group} as string,",
				"          {Primary Contact} as string,",
				"          {Postal Code} as string,",
				"          {Valid From} as timestamp,",
				"          {Valid To} as timestamp,",
				"          {Lineage Key} as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 2,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          {WWI Customer ID} = CustomerID,",
				"          Customer = CustomerName,",
				"          {Valid From} = ValidFrom,",
				"          {Valid To} = ValidTo,",
				"          {Lineage Key}",
				"     )) ~> SinkOrders",
				"alterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          {Customer Key} as integer,",
				"          {WWI Customer ID} as integer,",
				"          Customer as string,",
				"          Category as string,",
				"          {Buying Group} as string,",
				"          {Primary Contact} as string,",
				"          {Postal Code} as string,",
				"          {Valid From} as timestamp,",
				"          {Valid To} as timestamp,",
				"          {Lineage Key} as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 1,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          {Customer Key},",
				"          {WWI Customer ID} = CustomerID,",
				"          Customer = CustomerName,",
				"          {Valid From} = ValidFrom,",
				"          {Valid To} = ValidTo,",
				"          {Lineage Key}",
				"     )) ~> sinkUpdate"
			]
		}
	}
}