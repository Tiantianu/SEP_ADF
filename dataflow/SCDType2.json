{
	"name": "SCDType2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "wwiorders",
						"type": "DatasetReference"
					},
					"name": "WWIOrders"
				},
				{
					"dataset": {
						"referenceName": "wwiorders_sink",
						"type": "DatasetReference"
					},
					"name": "OrderTable"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "wwiorders_sink",
						"type": "DatasetReference"
					},
					"name": "SinkOrders"
				},
				{
					"dataset": {
						"referenceName": "DelimitedText2",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "NotNull"
				},
				{
					"name": "AddingIsActive"
				},
				{
					"name": "select1"
				},
				{
					"name": "lookup1"
				},
				{
					"name": "IDnotNull"
				},
				{
					"name": "select2"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "alterRow1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          OrderID as integer,",
				"          CustomerID as integer,",
				"          SalespersonPersonID as integer,",
				"          PickedByPersonID as integer,",
				"          ContactPersonID as integer,",
				"          BackorderOrderID as integer,",
				"          OrderDate as date,",
				"          ExpectedDeliveryDate as date,",
				"          CustomerPurchaseOrderNumber as string,",
				"          IsUndersupplyBackordered as boolean,",
				"          Comments as string,",
				"          DeliveryInstructions as string,",
				"          InternalComments as string,",
				"          PickingCompletedWhen as timestamp,",
				"          LastEditedBy as integer,",
				"          LastEditedWhen as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> WWIOrders",
				"source(output(",
				"          OrderID as integer,",
				"          CustomerID as integer,",
				"          SalespersonPersonID as integer,",
				"          PickedByPersonID as integer,",
				"          ContactPersonID as integer,",
				"          BackorderOrderID as integer,",
				"          OrderDate as date,",
				"          ExpectedDeliveryDate as date,",
				"          CustomerPurchaseOrderNumber as string,",
				"          IsUndersupplyBackordered as boolean,",
				"          Comments as string,",
				"          DeliveryInstructions as string,",
				"          InternalComments as string,",
				"          PickingCompletedWhen as timestamp,",
				"          LastEditedBy as integer,",
				"          LastEditedWhen as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> OrderTable",
				"WWIOrders filter(!isNull(OrderID)) ~> NotNull",
				"NotNull derive(IsActive = 1) ~> AddingIsActive",
				"OrderTable select(mapColumn(",
				"          SQL_OrderID = OrderID,",
				"          CustomerID,",
				"          SalespersonPersonID,",
				"          PickedByPersonID,",
				"          ContactPersonID,",
				"          BackorderOrderID,",
				"          OrderDate,",
				"          ExpectedDeliveryDate,",
				"          CustomerPurchaseOrderNumber,",
				"          IsUndersupplyBackordered,",
				"          Comments,",
				"          DeliveryInstructions,",
				"          InternalComments,",
				"          PickingCompletedWhen,",
				"          LastEditedBy,",
				"          LastEditedWhen",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"WWIOrders, select1 lookup(OrderID == SQL_OrderID,",
				"     multiple: true,",
				"     broadcast: 'auto')~> lookup1",
				"lookup1 filter(!isNull(SQL_OrderID)) ~> IDnotNull",
				"IDnotNull select(mapColumn(",
				"          CustomerID = WWIOrders@CustomerID,",
				"          SalespersonPersonID = WWIOrders@SalespersonPersonID,",
				"          PickedByPersonID = WWIOrders@PickedByPersonID,",
				"          ContactPersonID = WWIOrders@ContactPersonID,",
				"          BackorderOrderID = WWIOrders@BackorderOrderID,",
				"          OrderDate = WWIOrders@OrderDate,",
				"          ExpectedDeliveryDate = WWIOrders@ExpectedDeliveryDate,",
				"          CustomerPurchaseOrderNumber = WWIOrders@CustomerPurchaseOrderNumber,",
				"          IsUndersupplyBackordered = WWIOrders@IsUndersupplyBackordered,",
				"          Comments = WWIOrders@Comments,",
				"          DeliveryInstructions = WWIOrders@DeliveryInstructions,",
				"          InternalComments = WWIOrders@InternalComments,",
				"          PickingCompletedWhen = WWIOrders@PickingCompletedWhen,",
				"          LastEditedBy = WWIOrders@LastEditedBy,",
				"          LastEditedWhen = WWIOrders@LastEditedWhen,",
				"          SQL_OrderID,",
				"          CustomerID = select1@CustomerID,",
				"          SalespersonPersonID = select1@SalespersonPersonID,",
				"          PickedByPersonID = select1@PickedByPersonID,",
				"          ContactPersonID = select1@ContactPersonID,",
				"          BackorderOrderID = select1@BackorderOrderID,",
				"          OrderDate = select1@OrderDate,",
				"          ExpectedDeliveryDate = select1@ExpectedDeliveryDate,",
				"          CustomerPurchaseOrderNumber = select1@CustomerPurchaseOrderNumber,",
				"          IsUndersupplyBackordered = select1@IsUndersupplyBackordered,",
				"          Comments = select1@Comments,",
				"          DeliveryInstructions = select1@DeliveryInstructions,",
				"          InternalComments = select1@InternalComments,",
				"          PickingCompletedWhen = select1@PickingCompletedWhen,",
				"          LastEditedBy = select1@LastEditedBy,",
				"          LastEditedWhen = select1@LastEditedWhen",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"select2 derive(isActive = 0) ~> derivedColumn1",
				"derivedColumn1 alterRow(updateIf(1 == 1)) ~> alterRow1",
				"AddingIsActive sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          OrderID as integer,",
				"          CustomerID as integer,",
				"          SalespersonPersonID as integer,",
				"          PickedByPersonID as integer,",
				"          ContactPersonID as integer,",
				"          BackorderOrderID as integer,",
				"          OrderDate as date,",
				"          ExpectedDeliveryDate as date,",
				"          CustomerPurchaseOrderNumber as string,",
				"          IsUndersupplyBackordered as boolean,",
				"          Comments as string,",
				"          DeliveryInstructions as string,",
				"          InternalComments as string,",
				"          PickingCompletedWhen as timestamp,",
				"          LastEditedBy as integer,",
				"          LastEditedWhen as timestamp",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          OrderID,",
				"          CustomerID,",
				"          SalespersonPersonID,",
				"          PickedByPersonID,",
				"          ContactPersonID,",
				"          BackorderOrderID,",
				"          OrderDate,",
				"          ExpectedDeliveryDate,",
				"          CustomerPurchaseOrderNumber,",
				"          IsUndersupplyBackordered,",
				"          Comments,",
				"          DeliveryInstructions,",
				"          InternalComments,",
				"          PickingCompletedWhen,",
				"          LastEditedBy,",
				"          LastEditedWhen,",
				"          IsUndersupplyBackordered = IsActive",
				"     )) ~> SinkOrders",
				"alterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Column_1 as string",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          OrderID = SQL_OrderID,",
				"          CustomerID,",
				"          SalespersonPersonID,",
				"          PickedByPersonID,",
				"          ContactPersonID,",
				"          BackorderOrderID,",
				"          OrderDate,",
				"          ExpectedDeliveryDate,",
				"          CustomerPurchaseOrderNumber,",
				"          IsUndersupplyBackordered,",
				"          Comments,",
				"          DeliveryInstructions,",
				"          InternalComments,",
				"          PickingCompletedWhen,",
				"          LastEditedBy,",
				"          LastEditedWhen",
				"     )) ~> sink1"
			]
		}
	}
}