{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "sep-adf"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Input_customer",
								"type": "DatasetReference"
							},
							"name": "source1"
						},
						{
							"dataset": {
								"referenceName": "Dim_customer",
								"type": "DatasetReference"
							},
							"name": "DimCustomer"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Dim_customer",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "ForActive"
						},
						{
							"name": "exists1"
						},
						{
							"name": "surrogateKey1"
						},
						{
							"name": "exists2"
						},
						{
							"name": "select1"
						},
						{
							"name": "join1"
						},
						{
							"name": "select2"
						},
						{
							"name": "union1"
						},
						{
							"name": "alterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {Customer Key} as integer,",
						"          {WWI Customer ID} as integer,",
						"          Customer as string,",
						"          {Bill To Customer} as string,",
						"          Category as string,",
						"          {Buying Group} as string,",
						"          {Primary Contact} as string,",
						"          {Postal Code} as string,",
						"          {Valid From} as timestamp,",
						"          {Valid To} as timestamp,",
						"          {Lineage Key} as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table',",
						"     partitionBy('hash', 1)) ~> source1",
						"source(output(",
						"          {Customer Key} as integer,",
						"          {WWI Customer ID} as integer,",
						"          Customer as string,",
						"          Category as string,",
						"          {Buying Group} as string,",
						"          {Primary Contact} as string,",
						"          {Postal Code} as string,",
						"          {Valid From} as timestamp,",
						"          {Valid To} as timestamp,",
						"          {Lineage Key} as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DimCustomer",
						"DimCustomer filter(toInteger(byName('Lineage Key'))==2) ~> ForActive",
						"source1, ForActive exists(source1@{WWI Customer ID} == DimCustomer@{WWI Customer ID},",
						"     negate:true,",
						"     broadcast: 'auto')~> exists1",
						"exists1 keyGenerate(output(Key as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> surrogateKey1",
						"ForActive, exists1 exists(DimCustomer@{WWI Customer ID} == toInteger(source1@{WWI Customer ID}),",
						"     negate:false,",
						"     broadcast: 'auto')~> exists2",
						"exists2 select(mapColumn(",
						"          {Customer Key},",
						"          {WWI Customer ID},",
						"          Customer,",
						"          {Valid From},",
						"          {Valid To},",
						"          {Lineage Key}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"surrogateKey1, ForActive join(source1@{Customer Key} == DimCustomer@{Customer Key},",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"join1 select(mapColumn(",
						"          {Customer Key} = source1@{Customer Key},",
						"          {WWI Customer ID} = source1@{WWI Customer ID},",
						"          Customer = source1@Customer,",
						"          {Valid From} = source1@{Valid From},",
						"          {Valid To} = source1@{Valid To},",
						"          {Lineage Key} = source1@{Lineage Key}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select2",
						"select2, select1 union(byName: true)~> union1",
						"union1 alterRow(insertIf(true())) ~> alterRow1",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          {Customer Key} as integer,",
						"          {WWI Customer ID} as integer,",
						"          Customer as string,",
						"          Category as string,",
						"          {Buying Group} as string,",
						"          {Primary Contact} as string,",
						"          {Postal Code} as string,",
						"          {Valid From} as timestamp,",
						"          {Valid To} as timestamp,",
						"          {Lineage Key} as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          {Customer Key},",
						"          {WWI Customer ID},",
						"          Customer,",
						"          {Valid From},",
						"          {Valid To},",
						"          {Lineage Key}",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/3_SCDType2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SCDType2",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "SCDType2",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"WWICustomer": {},
									"CustomerTable": {},
									"SinkOrders": {},
									"sinkUpdate": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}